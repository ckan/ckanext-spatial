name: Tests
on: [push, pull_request]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
      - name: Install requirements
        run: pip install flake8 pycodestyle
      - name: Check syntax
        run: flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics --exclude ckan

  test:
    needs: lint
    strategy:
      matrix:
        include:
          - ckan-version: "2.11"
            ckan-image: "ckan/ckan-dev:2.11-py3.10"
            solr-image: "2.10-solr9-spatial"
            harvester-version: 'master'
          - ckan-version: "2.10"
            ckan-image: "ckan/ckan-dev:2.10-py3.10"
            solr-image: "2.10-solr9-spatial"
            harvester-version: 'master'
          - ckan-version: 2.9
            ckan-image: "amercader/ckan-dev:2.9-py3.9"
            solr-image: 2.9-solr9-spatial
            harvester-version: 'master'
      fail-fast: false
    
    name: CKAN ${{ matrix.ckan-version }}, Solr ${{ matrix.solr-image }}
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.ckan-image }}
    services:
      solr:
        image: ckan/ckan-solr:${{ matrix.solr-image }}
      postgres:
        image: ckan/ckan-postgres-dev:${{ matrix.ckan-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:3
    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1
      PGPASSWORD: postgres
    
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies (common)
      run: |
        DEBIAN_FRONTEND=noninteractive apt-get --assume-yes --quiet install \
          python3-dev \
          libxml2-dev \
          libxslt1-dev \
          libgeos-c1v5

    - name: Install dependencies from requirements.txt
      run: |
        pip install -r requirements.txt
        pip install pytest-ckan

    - name: Install harvester
      run: |
        echo "Installing harvester"
        git clone --depth 1 --branch ${{ matrix.harvester-version }} https://github.com/ckan/ckanext-harvest
        cd ckanext-harvest
        echo "upgrade pip"
        pip install --upgrade pip
        echo "Installing harvester requirements"
        pip install -r pip-requirements.txt
        echo "Installing harvester dev-requirements"
        pip install -r dev-requirements.txt
        echo "Installing harvester extension"
        pip install -e .

    - name: Install requirements
      run: pip install -e .

    - name: Replace default path to CKAN
      run: |
        # Replace default path to CKAN core config file with the one on the container
        sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini

    - name: Run tests
      run: pytest --ckan-ini=test.ini --cov=ckanext.spatial --cov-report term-missing --cov-append --disable-warnings ckanext/spatial/tests
